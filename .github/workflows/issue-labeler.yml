name: OpenAI Issue Labeler

on:
  issues:
    types: [opened]

jobs:
  label_and_add_to_project:
    runs-on: ubuntu-latest
    permissions:
        issues: write
        pull-requests: write
        contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Label issue
      run: |
        ISSUE_TITLE=$(echo "${{ github.event.issue.title }}" | jq -Rs .)
        ISSUE_BODY=$(echo "${{ github.event.issue.body }}" | jq -Rs .)
        COMBINED_CONTENT="$ISSUE_TITLE: $ISSUE_BODY"
        
        JSON_PAYLOAD=$(jq -n \
          --arg system_content "Du bist ein Produktmanager für Software. Du bewertest GitHub Issue Text ob dieser ein Bug, Feature oder eine Frage ist. Dabei antwortest du ausschließlich mit 'bug', 'feature' oder 'question' ohne weiteren Text. Kannst du gar nichts zuordnen, antworte ausschließlich mit einer leeren Antwort." \
          --arg user_content "$COMBINED_CONTENT" \
          '{
            "model": "gpt-4",
            "messages": [
              {
                "role": "system",
                "content": $system_content
              },
              {
                "role": "user",
                "content": $user_content
              }
            ],
            "temperature": 1,
            "max_tokens": 256,
            "top_p": 1,
            "frequency_penalty": 0,
            "presence_penalty": 0
          }')

        RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{secrets.OPENAI_API_KEY}}" \
          -d "$JSON_PAYLOAD")
          
        echo "OpenAI Response: $RESPONSE"
          
        LABEL=$(echo $RESPONSE | jq -r .choices[0].message.content | tr -d '\n')
        echo "LABEL=$LABEL" >> $GITHUB_ENV

    - name: Add label to issue
      if: env.LABEL != ''
      uses: actions/github-script@v3
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: [process.env.LABEL]
          })

    - name: Dispatch Question Label Workflow
      if: env.LABEL == 'question'
      uses: actions/github-script@v3
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'question_label_workflow.yml',
            ref: 'main',
            inputs: {
              'issue_number': context.issue.number.toString()
            }
          })
