name: OpenAI Code Review on Pull Request

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  review_code:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Send code to OpenAI for review
      id: openai_review
      run: |
        git fetch origin
        echo "Base SHA: ${{ github.event.pull_request.base.sha }}"
        echo "Head SHA: ${{ github.event.pull_request.head.sha }}"
        PR_BODY="${{ github.event.pull_request.body }}"
        PR_TITLE="${{ github.event.pull_request.title }}"
        CODE_DIFF=$(git diff ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
        REVIEW_RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
          -d '{
            "model": "gpt-4",
            "messages": [
              {
                "role": "system",
                "content": "Du bist Developer Security Experte und Developer Performance Experte. Analysiere den geänderten Sourcecode. Beschreibe ausführlich, was für Probleme du finden konntest die deine Schwerpunkte betreffen. Zeige zusätzlich einen Lösungsweg. Wenn du keine Probleme oder Auffälligkeiten gefunden hast, antworte ausschließlich mit Der Code gefällt mir."
              },
              {
                "role": "user",
                "content": "'"${PR_TITLE}\n\n${PR_BODY}\n\n${CODE_DIFF}"'"
              }
            ]
          }')
        REVIEW_MESSAGE=$(echo $REVIEW_RESPONSE | jq -r .choices[0].message.content)
        echo "$REVIEW_MESSAGE" > review_message.txt

    - name: Comment on PR with OpenAI's review
      uses: actions/github-script@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const prNumber = ${{ github.event.pull_request.number }};
          const fs = require('fs');
          const reviewMessage = fs.readFileSync('review_message.txt', 'utf8');
          github.issues.createComment({
            issue_number: prNumber,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: reviewMessage
          });

    - name: Merge PR if review is positive
      if: contains(fromJSON('["$(cat review_message.txt)"]'), 'Der Code gefällt mir.') # Adjust this condition based on OpenAI's typical positive responses
      uses: actions/github-script@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const prNumber = ${{ github.event.pull_request.number }};
          github.pulls.merge({
            pull_number: prNumber,
            owner: context.repo.owner,
            repo: context.repo.repo
          });
