name: Move Issue to Review

on:
  pull_request:
    types: [assigned]

jobs:
  move-issue-to-review:
    runs-on: ubuntu-latest
    steps:
      - name: Move linked issue to Review column
        uses: actions/github-script@v5
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const repoName = context.repo.repo;
            const ownerName = context.repo.owner;

            // GraphQL query to get linked issues from the pull request
            const query = `
              query($owner: String!, $repo: String!, $prNumber: Int!) {
                repository(owner: $owner, name: $repo) {
                  pullRequest(number: $prNumber) {
                    closingIssuesReferences(first: 10) {
                      nodes {
                        id
                        number
                        title
                      }
                    }
                  }
                }
              }
            `;

            const variables = {
              owner: ownerName,
              repo: repoName,
              prNumber: prNumber
            };

            const response = await github.graphql(query, variables);
            const linkedIssues = response.repository.pullRequest.closingIssuesReferences.nodes;

            if (linkedIssues.length === 0) {
              console.log("Keine verknüpften Issues gefunden.");
            } else {
              console.log("Gefundene verknüpfte Issues:");
              linkedIssues.forEach(issue => {
                console.log(`Issue #${issue.number}: ${issue.title}`);
              });

              // Replace with your project field ID and option ID for the Review column
              const fieldId = 'board';
              const optionId = '9fbcdcc0';

              for (const issue of linkedIssues) {
                // GraphQL mutation to move the issue to the Review column
                const mutation = `
                  mutation($itemId: ID!, $fieldId: ID!, $optionId: ID!) {
                    updateProjectV2ItemFieldValue(input: {
                      projectId: $itemId,
                      fieldId: $fieldId,
                      value: {
                        singleSelectOptionId: $optionId
                      }
                    }) {
                      projectV2Item {
                        id
                      }
                    }
                  }
                `;

                const mutationVariables = {
                  itemId: issue.id,
                  fieldId: fieldId,
                  optionId: optionId
                };

                await github.graphql(mutation, mutationVariables);
              }
            }